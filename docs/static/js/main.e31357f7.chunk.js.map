{"version":3,"sources":["components/Title.js","components/SearchForm.js","components/Movie.js","components/MovieList.js","pages/Home.js","components/ButtonBack.js","pages/Details.js","pages/NoFound.js","App.js","serviceWorker.js","index.js"],"names":["Title","children","this","props","className","Component","SearchForm","state","inputMovie","_handleChange","ev","setState","target","value","_handleOnSumit","preventDefault","fetch","then","result","json","data","Search","onResults","onSubmit","type","placeholder","onChange","Movie","movie","imdbID","Poster","Year","to","src","alt","MovieList","movies","map","index","key","Home","movieResults","userSearch","_handleResults","results","_renderResults","undefined","ButtonBack","Details","_fetchMovie","id","movieId","match","params","Actors","Metascore","Plot","title","style","fontWeight","NoFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e31357f7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Title extends Component {\r\n  render() {\r\n    const {children} = this.props;\r\n    return <h1 className=\"title\">{children}</h1>;\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import React, {Component} from 'react';\r\n\r\nclass SearchForm extends Component {\r\n  state = {\r\n    inputMovie: '',\r\n  };\r\n  _handleChange = (ev) => {\r\n    this.setState({\r\n      inputMovie: ev.target.value,\r\n    });\r\n  };\r\n  _handleOnSumit = (ev) => {\r\n    ev.preventDefault();\r\n    const API_KEY = '88fc2dab';\r\n    const {inputMovie} = this.state;\r\n    fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&s=${inputMovie}`)\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        const {Search} = data;\r\n        this.props.onResults(Search);\r\n      });\r\n  };\r\n  render() {\r\n    const {inputMovie} = this.state;\r\n    return (\r\n      <form onSubmit={this._handleOnSumit}>\r\n        <div className=\"field has-addons SearchForm-wrapper\">\r\n          <div className=\"control\">\r\n            <input className=\"input\" type=\"text\" placeholder=\"Find movies\" onChange={this._handleChange} value={inputMovie} />\r\n          </div>\r\n          <div className=\"control\">\r\n            <button className=\"button is-info\">Search</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Movie extends Component {\r\n  render() {\r\n    const {imdbID, Poster, Title, Year} = this.props.movie;\r\n    return (\r\n      <Link to={`/detail/${imdbID}`} className=\"Container-item card\">\r\n        <div className=\"card-image\">\r\n          <figure className=\"image\">\r\n            <img src={Poster} alt={Title} />\r\n          </figure>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"media\">\r\n            <div className=\"media-content\">\r\n              <p className=\"title is-4\">{Title}</p>\r\n              <p className=\"subtitle is-6\">{Year}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Movie from './Movie';\r\n\r\nclass MovieList extends Component {\r\n  static propTypes = {\r\n    movies: PropTypes.arrayOf(),\r\n  };\r\n  render() {\r\n    const {movies} = this.props;\r\n\r\n    return (\r\n      <div className=\"Container-list\">\r\n        {movies.map((movie, index) => {\r\n          return <Movie key={index} movie={movie} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieList;\r\n","import React, {Component} from 'react';\r\nimport Title from '../components/Title';\r\nimport SearchForm from '../components/SearchForm';\r\nimport MovieList from '../components/MovieList';\r\nclass Home extends Component {\r\n  state = {movieResults: [], userSearch: false};\r\n  _handleResults = (results) => {\r\n    this.setState({\r\n      movieResults: results,\r\n      userSearch: true,\r\n    });\r\n  };\r\n  _renderResults = () => {\r\n    const {movieResults} = this.state;\r\n    return this.state.movieResults === undefined ? <p>No Found results</p> : <MovieList movies={movieResults} />;\r\n  };\r\n\r\n  render() {\r\n    const {userSearch} = this.state;\r\n    return (\r\n      <header className=\"container is-fluid \">\r\n        <Title>Search-movie</Title>\r\n        <div className=\"SearchForm-wrapper\">\r\n          <SearchForm onResults={this._handleResults} />\r\n        </div>\r\n        {userSearch ? this._renderResults() : <p>Use the form for search movie</p>}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass ButtonBack extends Component {\r\n  render() {\r\n    return (\r\n      <Link to=\"/\" className=\"delete is-large btn\">\r\n        Volver\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonBack;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonBack from '../components/ButtonBack';\r\n\r\nclass Details extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.shape({\r\n      params: PropTypes.object,\r\n      isExact: PropTypes.bool,\r\n      path: PropTypes.string,\r\n      url: PropTypes.string,\r\n    }),\r\n  };\r\n\r\n  state = {movie: {}};\r\n  _fetchMovie = ({id}) => {\r\n    const API_KEY = '88fc2dab';\r\n    fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`)\r\n      .then((result) => result.json())\r\n      .then((movie) => {\r\n        this.setState({movie});\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    const {movieId} = this.props.match.params;\r\n    this._fetchMovie({id: movieId});\r\n  }\r\n  render() {\r\n    const {Actors, Metascore, Plot, Poster, Title} = this.state.movie;\r\n    return (\r\n      <div className=\"card Container-detail\">\r\n        <ButtonBack />\r\n        <div className=\"card-image\">\r\n          <img src={Poster} title={Title} alt={Title} />\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"media-content\">\r\n            <h1 className=\"title is-4\">{Title}</h1>\r\n            <h3 className=\"subtitle\">\r\n              <span style={{fontWeight: 600}}>Actors:</span> {Actors}\r\n            </h3>\r\n            <span>Score: {Metascore}</span>\r\n            <p>Plot: {Plot}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n","import React, {Component} from 'react';\r\nimport ButtonBack from '../components/ButtonBack';\r\n\r\nclass NoFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"title\">404</h2>\r\n        <h3 className=\"subtitle\">Page not found</h3>\r\n        <ButtonBack />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NoFound;\r\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\n//pages\nimport Home from './pages/Home';\nimport Details from './pages/Details';\nimport NoFound from './pages/NoFound';\n\nimport './App.css';\nimport 'bulma/css/bulma.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/detail/:movieId\" component={Details} />\n        <Route component={NoFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}